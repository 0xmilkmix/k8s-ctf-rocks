apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "entry.fullname" . }}
  namespace: {{ .Values.namespace | quote }}
  labels:
    {{- include "entry.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "entry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "entry.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "entry.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: ssh-key
              mountPath: /var/run/secrets/kubernetes.io/ssh
              readOnly: true
            - name: entry-config
              mountPath: /entry/cfg
              readOnly: true
          resources:                                                                                                                                                                                                                          
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:                                                                                                                                                                                                                      
            httpGet:
              path: /
              port: http
      volumes:
        - name: ssh-key
          configMap:
            name: "{{ .Chart.Name }}-ssh-key"
        - name: entry-config
          configMap:
            name: "{{ .Chart.Name }}-config-egg"
